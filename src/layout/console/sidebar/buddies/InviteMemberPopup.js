import React, {Component} from "react";
import {Icon, Input, Popup,} from "semantic-ui-react";
import FeatureToggle from "../../../shared/FeatureToggle";

/**
 * our list items that are displayed in our buddy panel.
 */
export default class InviteMemberPopup extends Component {

  constructor(props) {
    super(props);
    this.name = "[InviteMemberPopup]";
    this.state = {
      currentEmailValue: "",
      emailErrorFeedback: "",
      emailSuccessFeedback: ""
    };
  }


  /**
   * Handles the callback message response from the email request
   * @param arg
   */
  handleInviteCallback = (arg) => {
    console.log("callback!");
    if (arg.error) {
      console.error(arg.error);
      this.setState({
        emailErrorFeedback: arg.error,
        emailSuccessFeedback: ""
      });
    } else {
      console.log("Invite sent");
      this.setState({
        emailErrorFeedback: "",
        emailSuccessFeedback: "Invitation sent."
      });
    }
  }

  /**
   * Basic validation to make sure the email matches anything@anything.anything
   * and doesnt include multiple @ signs
   * @param email
   * @returns {boolean}
   */
  isValidEmail(email) {
    let re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
  }

  /**
   * Handle pressing enter in the email box
   * @param e
   */
  handleKeyPressForEmail = (e) => {
    if (e.charCode === 13) {
      if (this.isValidEmail(this.state.currentEmailValue)) {
        this.props.sendInviteRequest(this.state.currentEmailValue, this.handleInviteCallback);
        this.setState({
          currentEmailValue: ""
        });
      } else {
        this.setState({
          emailErrorFeedback: "Invalid email",
          emailSuccessFeedback: ""
        });
      }
    }
  };

  /**
   * handle changing the value of the email input box
   * @param e - the event that was generated by user gui event
   * @param value
   */
  handleChangeForEmail = (e, { value }) => {
    this.setState({
      currentEmailValue: value,
      emailErrorFeedback: "",
      emailSuccessFeedback: ""
    });
  };

  onCloseBuddyInvite = () => {
    this.setState({
      currentEmailValue: "",
      emailErrorFeedback: "",
      emailSuccessFeedback: ""
    });
  }


  getInviteMemberButton() {
    let title = "Invite to Team";

    if (FeatureToggle.isMoovieApp) {
      title = "Invite Buddies to WatchMoovies";
    }

    return (<Popup
      position={"bottom center"}
      className={"invitePopup"}
      basic
      inverted
      trigger={<Icon className={"addIcon"} inverted name="plus circle"/>}
      on='click'
      closeOnDocumentClick={true}
      onClose={this.onCloseBuddyInvite}
    >
      <Popup.Content>
        <div className="inviteTitle">
          {title}
        </div>
        <div className="inviteEmailInput">
          <Input
            id="inviteEmailInput"
            fluid
            inverted
            autoFocus
            placeholder={"email address"}
            value={this.state.currentEmailValue}
            onKeyPress={this.handleKeyPressForEmail}
            onChange={this.handleChangeForEmail}
            onFocus={this.props.handleGlobalHudInputLock}
            onBlur={this.props.handleGlobalHudInputUnlock}
          />
        </div>
        <div className="errorMessage">&nbsp;{this.state.emailErrorFeedback}</div>
        <div className="successMessage">&nbsp;{this.state.emailSuccessFeedback}</div>
      </Popup.Content>
    </Popup>);
  }


  /**
   * renders our list item JSX
   * @returns {*}
   */
  render() {
    return this.getInviteMemberButton();
  }
}
